///////////////////////////////////////////////////////////////////////////////////////////////////
//
// Contains procedures related to ingesting missionplan config.
// NOTE: Must be Included AFTER definition of Config struct!
//
// ingestJSONConfig() - ingests JSON config through a string or a fallback file
//
///////////////////////////////////////////////////////////////////////////////////////////////////

// ingests JSON via a string, or a filename as a fallback, and populates a provided struct
Define Procedure ingestJSON(
        // input
        String   json_fallback_file_path,   // if json_string is blank, this path will be ingested
        String   json_string,               // serialized JSON in a string
        Variable missing_property_behavior, // used for JsonInterface.MissingPropertyBehavior (0 for ignore, 1 for error)

        // modify
        // (N/A)

        // output
        String err,   // error message
        Config config // Config struct to populate
    );
    err = '';

    Constant String CODE_LOCATION = 'ingestJSON'; /// code location for logging

    Variable try_failed = 0; /// indicates a Try block failed

    JsonInterface json; /// json interface used to deserialize JSON content

    try_failed = 0; Try sending ErrorCount to try_failed;
        json.MissingPropertyBehavior = missing_property_behavior;
    End;
    If (try_failed);
        Call logTryErrors();
        err = "failed to set json.MissingPropertyBehavior to value: " + missing_property_behavior.ToString();
        Call logError(err);
        ExitProcedure;
    End;

    If (json_string != '');
        Call logInfo("provided JSON string is non-empty. populating Config struct using JSON string.");

        try_failed = 0; Try sending ErrorCount to try_failed;
            json.Deserialize(json_string, config);
        End;
        If (try_failed);
            Call logTryErrors();
            Call safeStop("failed to deserialize JSON string");
        End;

        Call logInfo("JSON string successfully deserialized and loaded into Config struct");
        ExitProcedure;
    End;

    Call logInfo("provided JSON string is empty. will attempt to deserialize from file: " + json_fallback_file_path);

    try_failed = 0; Try sending ErrorCount to try_failed;
        json.DeserializeFromFile(json_fallback_file_path, config);
    End;
    If (try_failed);
        Call logTryErrors();
        err = "failed to deserialize JSON string";
        Call logError(err);
        ExitProcedure;
    End;

    Call logInfo("JSON file '" + json_fallback_file_path + "' successfully deserialized and loaded into Config struct");

EndProcedure;
